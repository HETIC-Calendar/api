// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TalkStatus {
  PENDING_APPROVAL
  APPROVED
  REJECTED
}

enum TalkSubject {
  AI
  WEB_DEVELOPMENT
  MOBILE_DEVELOPMENT
  DATA_SCIENCE
  CLOUD_COMPUTING
  DEVOPS
  CYBER_SECURITY
  BLOCKCHAIN
  IOT
  GAME_DEVELOPMENT
}

enum TalkLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum UserType {
  PLANNER
  SPEAKER
}

model Room {
  id        String   @id @default(cuid())
  name      String
  capacity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Talk      Talk[]
}

model Talk {
  id          String      @id @default(cuid())
  status      TalkStatus  @default(PENDING_APPROVAL)
  title       String
  subject     TalkSubject
  description String
  speaker     String
  startTime   DateTime
  endTime     DateTime
  roomId      String
  room        Room        @relation(fields: [roomId], references: [id])
  level       TalkLevel   @default(INTERMEDIATE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  type      UserType @default(SPEAKER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
